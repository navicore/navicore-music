name: Debug Database State

on:
  workflow_dispatch:

jobs:
  debug:
    name: Debug Database
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Wrangler
        run: npm install -g wrangler
      
      - name: Debug database state
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "üîç Debugging database state..."
          
          echo "üìã Listing all tables:"
          wrangler d1 execute navicore-music --remote --command="SELECT name FROM sqlite_master WHERE type='table' ORDER BY name;" --json | jq -r '.result[0].results[].name' || echo "Failed to list tables"
          
          echo ""
          echo "üîç Checking if tag tables exist:"
          wrangler d1 execute navicore-music --remote --command="SELECT name FROM sqlite_master WHERE type='table' AND name IN ('tags', 'album_tags', 'track_tags') ORDER BY name;" --json | jq -r '.result[0].results[].name' || echo "No tag tables found"
          
          echo ""
          echo "üìä Checking database binding..."
          echo "Database name from wrangler.toml: navicore-music"
          echo "Database ID from wrangler.toml: c09c462b-e2f1-420d-a3fa-d0e8bc19736e"
          
          echo ""
          echo "üîç Attempting direct table count..."
          wrangler d1 execute navicore-music --remote --command="SELECT COUNT(*) as count FROM tracks;" || echo "Tracks table doesn't exist or query failed"
          
          echo ""
          echo "üîç Checking if we can create a test table..."
          wrangler d1 execute navicore-music --remote --command="CREATE TABLE IF NOT EXISTS test_table (id INTEGER PRIMARY KEY, test TEXT);" || echo "Cannot create test table"
          wrangler d1 execute navicore-music --remote --command="INSERT INTO test_table (id, test) VALUES (1, 'GitHub Action Test');" || echo "Cannot insert into test table"
          wrangler d1 execute navicore-music --remote --command="SELECT * FROM test_table;" || echo "Cannot read from test table"
          wrangler d1 execute navicore-music --remote --command="DROP TABLE IF EXISTS test_table;" || echo "Cannot drop test table"
          
          echo ""
          echo "‚úÖ Debug complete"