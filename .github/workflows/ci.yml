name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check:
    name: Lint and Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install
      
      - name: Validate package.json
        run: npm ls
      
      - name: Check HTML validity
        run: |
          echo "Checking HTML files for basic syntax..."
          find dist -name "*.html" -exec echo "Checking {}" \; -exec node -e "
            const fs = require('fs');
            const content = fs.readFileSync('{}', 'utf8');
            // Basic HTML validation
            if (!content.includes('<!DOCTYPE html>')) console.error('{}: Missing DOCTYPE');
            if (!content.includes('<html')) console.error('{}: Missing html tag');
            if (!content.includes('</html>')) console.error('{}: Missing closing html tag');
          " \;
      
      - name: Check JavaScript syntax
        run: |
          echo "Checking JavaScript syntax in HTML files..."
          find dist -name "*.html" -exec grep -l "<script" {} \; | while read file; do
            echo "Checking $file"
            # Extract and check inline scripts (basic check)
            node -e "
              const fs = require('fs');
              const content = fs.readFileSync('$file', 'utf8');
              const scripts = content.match(/<script[^>]*>([\s\S]*?)<\/script>/g) || [];
              scripts.forEach((script, i) => {
                const code = script.replace(/<script[^>]*>|<\/script>/g, '');
                if (code.trim()) {
                  try {
                    new Function(code);
                  } catch (e) {
                    console.error('$file: Script ' + i + ' has syntax error: ' + e.message);
                  }
                }
              });
            "
          done
      
      - name: Check Worker JavaScript
        run: |
          echo "Checking Worker files..."
          node -c build/worker/shim.mjs
          node -c build/worker/zip-utils.mjs
      
      - name: Verify deployment files exist
        run: |
          echo "Checking required files..."
          test -f wrangler.toml || (echo "Missing wrangler.toml" && exit 1)
          test -f package.json || (echo "Missing package.json" && exit 1)
          test -d dist || (echo "Missing dist directory" && exit 1)
          test -f dist/index.html || (echo "Missing dist/index.html" && exit 1)
          test -f build/worker/shim.mjs || (echo "Missing worker file" && exit 1)

  test-deploy:
    name: Test Deployment (Dry Run)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install
      
      - name: Test Worker build (dry run)
        run: npx wrangler deploy --dry-run --outdir=test-build
        env:
          CLOUDFLARE_API_TOKEN: "dummy-token-for-dry-run"
          CLOUDFLARE_ACCOUNT_ID: "dummy-account-for-dry-run"